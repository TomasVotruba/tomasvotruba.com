includes:
    - vendor/symplify/phpstan-rules/config/symplify-rules.neon

services:
    -
        class: Symplify\PHPStanRules\Rules\PreferredClassRule
        tags: [phpstan.rules.rule]
        arguments:
            oldToPreferredClasses:
                SplFileInfo: 'Symplify\SmartFileSystem\SmartFileInfo'
                DateTime: 'Nette\Utils\DateTime'
                'PhpCsFixer\Finder': 'Symfony\Component\Finder\Finder'
                # smart file system
                'Symfony\Component\Finder\SplFileInfo': 'Symplify\SmartFileSystem\SmartFileInfo'
                'Nette\Utils\FileSystem': 'Symplify\SmartFileSystem\SmartFileSystem'
                'Symfony\Component\Filesystem\Filesystem': 'Symplify\SmartFileSystem\SmartFileSystem'

    # require constant in argument position
    -
        class: Symplify\PHPStanRules\Rules\Enum\RequireConstantInMethodCallPositionRule
        tags: [phpstan.rules.rule]
        arguments:
            requiredConstantInMethodCall:
                Symfony\Component\DependencyInjection\Loader\Configurator\ParametersConfigurator:
                    set: [0]
                Symplify\PackageBuilder\Parameter\ParameterProvider:
                    provideArrayParameter: [0]
                    provideStringParameter: [0]
                    provideIntParameter: [0]

parameters:
    paths:
        - bin
        - src
        - tests
        - packages
        - config/config.php
        - rector.php

    level: 8

    reportUnmatchedIgnoredErrors: false

    ignoreErrors:
        -
            message: '#The path "/\.\./\.env\.local" was not found#'
            path: 'tests/bootstrap.php'

        # bug on Symplify rule
        - '#Do not use factory/method call in constructor\. Put factory in config and get service with dependency injection#'

        # required by Symfony setter
        -
            message: '#This call has duplicate argument#'
            paths:
                -  packages/*/config/*

        # false positive - read in twig template
        -
            message: '#Property TomasVotruba\\Blog\\ValueObject\\Post\:\:\$content is never written, only read#'
            path: packages/blog/src/ValueObject/Post.php

        # false positive private \DateTimeInterface $publishedAt,
        - '#Class TomasVotruba\\Blog\\ValueObject\\Post has an uninitialized readonly property \$content\. Assign it in the constructor#'

        -
            path: packages/blog/src/ValueObjectFactory/PostFactory.php
            message: '#Parameter argument on position 0 must use constant#'
